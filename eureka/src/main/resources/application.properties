server.port=8761

spring.profiles.active=dev
spring.application.name=eureka

security.user.name=eureka
security.user.password=s3cr3t

eureka.server.enable-self-preservation=false
eureka.client.register-with-eureka=false
eureka.client.fetch-registry=false
eureka.client.serviceUrl.defaultZone=http://${eureka.instance.hostname}:${server.port}/eureka/

#这个值用来控制多久踢掉机器，默认是3个心跳周期,他不会影响到保护模式
eureka.instance.leaseExpirationDurationInSeconds=2

#通过eureka.client.registerWithEureka：false和fetchRegistry：false来表明自己是一个eureka server.
#eureka.client.registerWithEureka=false
#eureka.client.fetchRegistry=false
eureka.client.RegistryFetchIntervalSeconds=10
#eureka.client.serviceUrl.defaultZone=http://${eureka.instance.hostname}:${server.port}/eureka/

## Eurake有一个配置参数eureka.server.renewalPercentThreshold，定义了renews 和renews threshold的比值，默认值为0.85。当server在15分钟内，比值低于percent，即少了15%的微服务心跳，server会进入自我保护状态，Self-Preservation。在此状态下，server不会删除注册信息，这就有可能导致在调用微服务时，实际上服务并不存在
## renewalPercentThreshold: 0.49 
## 中小规模下，自我保护模式坑比好处多，所以关闭它
eureka.server.enableSelfPreservation=false
## 主动失效检测间隔,配置成5秒
eureka.server.evictionIntervalTimerInMs=5000
## 心跳间隔，5秒
eureka.server.leaseRenewalIntervalInSeconds=5
## 没有心跳的淘汰时间，10秒
eureka.server.leaseExpirationDurationInSeconds=10
## 禁用readOnlyCacheMap
eureka.server.useReadOnlyResponseCache=false


logging.level.com.netflix.eureka=OFF
logging.level.com.netflix.discovery=OFF

security.user.name=eureka
security.user.password=s3cr3t